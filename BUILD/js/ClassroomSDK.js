class ClassroomSDK{constructor(){try{this.db=firebase.firestore(),this.auth=firebase.auth(),this.functions=firebase.app().functions("europe-west1"),console.log("‚úÖ Firebase services initialized in constructor.")}catch(t){console.error("‚ùå CRITICAL: Could not initialize Firebase services.",t),alert("Fatal Error: Could not connect to Firebase services. Please refresh.")}this.playerName=null,this.roomCode=null,this.isTeacher=!1,this.isInitialized=!1,this.studentId=null,this.isAiActiveForClass=!1,this.chatButton=null,this.chatContainer=null,this.chatMessages=null,this.chatInput=null,this.aiButton=null,this.aiContainer=null,this.aiMessages=null,this.aiInput=null,this.studentsListener=null,this.messagesListener=null,this.roomListener=null}async loginAnonymously(){try{const t=await this.auth.signInAnonymously();return console.log("‚úÖ Anonymous login successful:",t.user.uid),t.user}catch(t){throw console.error("üî• Anonymous login failed:",t),t}}async generateUniqueRoomCode(){let t=0;for(;t<20;){const e=Math.floor(1e3+9e3*Math.random()).toString(),s=this.db.collection("rooms").doc(e);if(!(await s.get()).exists)return console.log(`‚úÖ Found unique room code: ${e}`),e;console.log(`üîÑ Room code ${e} exists, trying next...`),t++}const e=Math.floor(1e3+9e3*Math.random()).toString();return console.log(`‚úÖ Generated random room code: ${e}`),e}async init(t,e,s,o=null){if(console.log(`üöÄ Initializing ${t}...`),this.appName=t,this.playerName=s,"teacher-dashboard"===t)this.isTeacher=!0,this.playerName="Teacher",this.roomCode=await this.generateUniqueRoomCode(),await this.initializeRoom(e.uid);else{if("student-app"!==t||!o)throw new Error("Invalid initialization parameters.");this.isTeacher=!1,this.roomCode=o,this.studentId=e;if(!await this.checkRoomExists(o))throw new Error(`Room with code ${o} does not exist.`);await this.joinRoom(this.studentId,this.playerName)}this.isInitialized=!0,console.log(`‚úÖ ${t} initialized successfully for room: ${this.roomCode}`)}async checkRoomExists(t){const e=this.db.collection("rooms").doc(t);return(await e.get()).exists}async initializeRoom(t){const e=this.db.collection("rooms").doc(this.roomCode);await e.set({room_code:this.roomCode,created_at:firebase.firestore.FieldValue.serverTimestamp(),teacher_uid:t,settings:{ai_active:!1,ai_model:"chatgpt",current_command:null,currentPoll:{isActive:!1}}})}async joinRoom(t,e){const s=this.db.collection("rooms").doc(this.roomCode).collection("students").doc(t);await s.set({uid:t,name:e,joined_at:firebase.firestore.FieldValue.serverTimestamp()})}listenForStudents(t){if(!this.roomCode)return;const e=this.db.collection("rooms").doc(this.roomCode).collection("students");this.studentsListener=e.onSnapshot(e=>{const s=[];e.forEach(t=>{s.push(t.data())}),console.log("üë®‚Äçüéì Students updated:",s.length),"function"==typeof t&&t(s)},t=>{console.error("üî• Error listening for students:",t)})}listenForMessages(t){if(!this.roomCode)return;const e=this.db.collection("rooms").doc(this.roomCode).collection("messages").orderBy("timestamp");this.messagesListener=e.onSnapshot(e=>{const s=[];e.docChanges().forEach(t=>{if("added"===t.type){const e=t.doc.data(),o=this.isTeacher?this.auth.currentUser?.uid:this.studentId,i=!0===e.is_private,n=e.recipient_uid===o,a=e.sender_uid===o;(!i||this.isTeacher||n||a)&&s.push(e)}}),s.length>0&&"function"==typeof t&&t(s)},t=>{console.error("üî• Error listening for messages:",t)})}listenForRoomUpdates(t){if(!this.roomCode)return;const e=this.db.collection("rooms").doc(this.roomCode);this.roomListener=e.onSnapshot(e=>{e.exists&&"function"==typeof t&&t(e.data())},t=>{console.error("üî• Error listening for room updates:",t)})}async sendMessage(t){if(t&&t.trim()&&this.roomCode)try{const e=this.db.collection("rooms").doc(this.roomCode).collection("messages");await e.add({sender:this.playerName||"Teacher",sender_uid:this.isTeacher?this.auth.currentUser?.uid:this.studentId,content:t,timestamp:firebase.firestore.FieldValue.serverTimestamp(),is_teacher:this.isTeacher})}catch(t){throw console.error("üî• Error sending message:",t),t}}async sendCommand(t,e={}){const s=this.db.collection("rooms").doc(this.roomCode);await s.update({"settings.current_command":{command:t,payload:e,timestamp:firebase.firestore.FieldValue.serverTimestamp()},last_activity:firebase.firestore.FieldValue.serverTimestamp()})}async toggleAI(){console.log("[DIAGNOSTIC] 1. toggleAI function started.");const t=this.db.collection("rooms").doc(this.roomCode);try{const e=await t.get(),s=!!e.exists&&e.data().settings?.ai_active;console.log(`[DIAGNOSTIC] 2. Read from DB. currentAI is: ${s}`);const o=!s;return console.log(`[DIAGNOSTIC] 3. Value to be written to DB is: ${o}`),await t.update({"settings.ai_active":o}),console.log("[DIAGNOSTIC] 4. SUCCESS: roomRef.update command finished without error."),o}catch(t){throw console.error("[DIAGNOSTIC] 5. CRITICAL FAILURE: Error during toggleAI process.",t),t}}cleanup(){this.studentsListener&&(this.studentsListener(),this.studentsListener=null),this.messagesListener&&(this.messagesListener(),this.messagesListener=null),this.roomListener&&(this.roomListener(),this.roomListener=null),this.roomListener_Polls&&(this.roomListener_Polls(),this.roomListener_Polls=null)}getRoomCode(){return this.roomCode}createChatInterface(){if(this.isTeacher)return void console.log("Teacher view: Floating chat interface disabled.");if(document.getElementById("classroom-chat-btn"))return;this.chatButton=document.createElement("button"),this.chatButton.id="classroom-chat-btn",this.chatButton.innerHTML="üí¨",this.chatButton.style.cssText="position: fixed; bottom: 20px; right: 20px; width: 60px; height: 60px; border-radius: 50%; background: #007bff; color: white; border: none; font-size: 24px; cursor: grab; box-shadow: 0 4px 12px rgba(0,0,0,0.3); z-index: 1000;",this.chatButton.onclick=()=>this.toggleChat(),this.makeDraggable(this.chatButton),document.body.appendChild(this.chatButton),this.chatContainer=document.createElement("div"),this.chatContainer.id="classroom-chat-container",this.chatContainer.style.cssText="position: fixed; bottom: 100px; right: 20px; width: 350px; height: 400px; background: white; border-radius: 15px; box-shadow: 0 8px 30px rgba(0,0,0,0.2); z-index: 999; display: none; overflow: hidden;";const t=document.createElement("div");t.style.cssText="background: #007bff; color: white; padding: 15px; display: flex; justify-content: space-between; align-items: center; font-weight: bold; cursor: grab;",t.innerHTML='\n            <span>üí¨ Class Chat</span>\n            <button id="chat-minimize-btn" style="background: none; border: none; color: white; font-size: 18px; cursor: pointer; padding: 5px;">‚àí</button>\n        ',this.makeDraggable(this.chatContainer,t),t.querySelector("#chat-minimize-btn").onclick=t=>{t.stopPropagation(),window.App&&window.App.closeChat?window.App.closeChat():this.toggleChat()},this.chatContainer.appendChild(t);const e=document.createElement("div");e.style.cssText="height: calc(100% - 60px); display: flex; flex-direction: column;",this.chatMessages=document.createElement("div"),this.chatMessages.id="classroom-chat-messages",this.chatMessages.style.cssText="flex: 1; padding: 15px; overflow-y: auto; background: #f8f9fa;",this.chatMessages.innerHTML='<div style="text-align: center; color: #999; font-style: italic;">No messages sent yet</div>';const s=document.createElement("div");s.style.cssText="padding: 15px; border-top: 1px solid #eee; background: white;",this.chatInput=document.createElement("input"),this.chatInput.type="text",this.chatInput.placeholder="Type a message...",this.chatInput.style.cssText="width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 20px; outline: none; font-size: 14px;",this.chatInput.onkeypress=t=>{if("Enter"===t.key&&!t.shiftKey){t.preventDefault();const e=this.chatInput.value.trim();e&&(this.sendMessage(e),this.chatInput.value="")}},s.appendChild(this.chatInput),e.appendChild(this.chatMessages),e.appendChild(s),this.chatContainer.appendChild(e),document.body.appendChild(this.chatContainer)}enableChat(){this.chatButton&&(this.chatButton.style.display="block")}toggleChat(){if(this.chatContainer)if(window.App)window.App.isChatOpen?window.App.closeChat():(window.App.openChat(),this.chatInput&&this.chatInput.focus());else{const t="none"!==this.chatContainer.style.display;this.chatContainer.style.display=t?"none":"block",!t&&this.chatInput&&this.chatInput.focus()}}addChatMessage(t,e,s){if(!this.chatMessages)return;const o=document.createElement("div");o.style.cssText="margin-bottom: 10px; padding: 8px 12px; background: white; border-radius: 8px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);";const i=document.createElement("div");i.style.cssText="font-weight: bold; color: #007bff; font-size: 12px; margin-bottom: 4px;",i.textContent=t;const n=document.createElement("div");n.style.cssText="color: #333; line-height: 1.4;",n.textContent=e,o.appendChild(i),o.appendChild(n),1===this.chatMessages.children.length&&this.chatMessages.children[0].textContent.includes("No messages sent yet")&&(this.chatMessages.innerHTML=""),this.chatMessages.appendChild(o),this.chatMessages.scrollTop=this.chatMessages.scrollHeight}createAIInterface(){if(document.getElementById("classroom-ai-btn"))return;this.aiButton=document.createElement("button"),this.aiButton.id="classroom-ai-btn",this.aiButton.innerHTML="ü§ñ",this.aiButton.style.cssText="position: fixed; bottom: 20px; right: 90px; width: 60px; height: 60px; border-radius: 50%; background: #4caf50; color: white; border: none; font-size: 24px; cursor: grab; box-shadow: 0 4px 12px rgba(0,0,0,0.3); z-index: 10000; display: block;",this.aiButton.onclick=()=>this.toggleAI(),this.makeDraggable(this.aiButton),document.body.appendChild(this.aiButton),this.aiContainer=document.createElement("div"),this.aiContainer.id="classroom-ai-container",this.aiContainer.style.cssText="position: fixed; bottom: 100px; right: 20px; width: 400px; height: 500px; background: white; border-radius: 15px; box-shadow: 0 8px 30px rgba(0,0,0,0.2); z-index: 999; display: none; overflow: hidden;";const t=document.createElement("div");t.style.cssText="background: #4caf50; color: white; padding: 15px; display: flex; justify-content: space-between; align-items: center; font-weight: bold; cursor: grab;",t.innerHTML='<span>ü§ñ AI Assistant</span><button style="background:none;border:none;color:white;font-size:18px;cursor:pointer;">‚àí</button>',this.makeDraggable(this.aiContainer,t),t.querySelector("button").onclick=t=>{t.stopPropagation(),this.toggleAI()},this.aiContainer.appendChild(t);const e=document.createElement("div");e.style.cssText="height: calc(100% - 60px); display: flex; flex-direction: column;",this.aiMessages=document.createElement("div"),this.aiMessages.id="classroom-ai-messages",this.aiMessages.style.cssText="flex: 1; padding: 15px; overflow-y: auto; background: #f8f9fa;",this.aiMessages.innerHTML='<div style="text-align: center; color: #999; font-style: italic;">Ask the AI assistant...</div>';const s=document.createElement("div");s.style.cssText="padding: 15px; border-top: 1px solid #eee; background: white;",this.aiInput=document.createElement("input"),this.aiInput.type="text",this.aiInput.placeholder="Ask a question...",this.aiInput.style.cssText="width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 20px; outline: none; font-size: 14px;",this.aiInput.onkeypress=t=>{if("Enter"===t.key&&!t.shiftKey){t.preventDefault();const e=this.aiInput.value.trim();if(e){const t=document.documentElement.lang||"en";this.sendAIMessage(e,t),this.aiInput.value=""}}},s.appendChild(this.aiInput),e.appendChild(this.aiMessages),e.appendChild(s),this.aiContainer.appendChild(e),document.body.appendChild(this.aiContainer)}toggleAI(){if(!this.aiContainer)return;const t="none"!==this.aiContainer.style.display;this.aiContainer.style.display=t?"none":"block",!t&&this.aiInput&&this.aiInput.focus()}getInterfaceLanguage(){return document.documentElement.lang||"en"}async sendAIMessage(t,e){if(this.isTeacher||this.isAiActiveForClass)if(e||(e=this.getInterfaceLanguage()),this.functions){this.addAIMessage(this.playerName||"You",t,!0);try{const s=this.functions.httpsCallable("askAI"),o=await s({prompt:t,roomCode:this.roomCode,language:e}),i=o.data.model?`ü§ñ (${o.data.model})`:"ü§ñ";this.addAIMessage(i,o.data.result,!1)}catch(t){console.error("üî• Error calling askAI:",t);let e="An error occurred with the AI service.";"functions/unauthenticated"===t.code&&(e="Authentication error. Please reconnect."),this.addAIMessage("ü§ñ",e,!1)}}else this.addAIMessage("ü§ñ","Error: AI service not initialized",!1);else this.addAIMessage("ü§ñ","AI is not available at the moment.",!1)}addAIMessage(t,e,s){if(!this.aiMessages)return;const o=document.createElement("div");o.style.cssText="margin-bottom: 10px; padding: 8px 12px; border-radius: 8px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); "+(s?"background: #007bff; color: white; margin-left: 20px;":"background: white; color: #333; margin-right: 20px;");const i=document.createElement("div");i.style.cssText="font-weight: bold; font-size: 12px; margin-bottom: 4px; "+(s?"color: rgba(255,255,255,0.8);":"color: #28a745;"),i.textContent=t;const n=document.createElement("div");n.style.cssText="line-height: 1.4;",n.textContent=e,o.appendChild(i),o.appendChild(n),1===this.aiMessages.children.length&&this.aiMessages.children[0].textContent.includes("Ask the AI assistant")&&(this.aiMessages.innerHTML=""),this.aiMessages.appendChild(o),this.aiMessages.scrollTop=this.aiMessages.scrollHeight}makeDraggable(t,e=null){(e||t).addEventListener("mousedown",e=>{e.preventDefault();let s=e.clientX-t.offsetLeft,o=e.clientY-t.offsetTop;t.style.right&&(t.style.left=t.offsetLeft+"px",t.style.right="");const i=e=>{t.style.left=e.clientX-s+"px",t.style.top=e.clientY-o+"px"},n=()=>{document.removeEventListener("mousemove",i),document.removeEventListener("mouseup",n)};document.addEventListener("mousemove",i),document.addEventListener("mouseup",n)})}showGameNotification(t){const e=document.createElement("div");if(e.style.cssText="\n            position: fixed; top: 20px; left: 50%; transform: translateX(-50%);\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; padding: 15px 25px; border-radius: 25px;\n            box-shadow: 0 4px 15px rgba(0,0,0,0.2); z-index: 10000;\n            font-weight: bold; font-size: 16px; animation: slideDown 0.3s ease;\n        ",e.textContent=t,document.body.appendChild(e),setTimeout(()=>{e.style.animation="slideUp 0.3s ease",setTimeout(()=>e.remove(),300)},3e3),!document.getElementById("notification-styles")){const t=document.createElement("style");t.id="notification-styles",t.textContent="\n                @keyframes slideDown { from { transform: translateX(-50%) translateY(-100%); opacity: 0; } to { transform: translateX(-50%) translateY(0); opacity: 1; } }\n                @keyframes slideUp { from { transform: translateX(-50%) translateY(0); opacity: 1; } to { transform: translateX(-50%) translateY(-100%); opacity: 0; } }\n            ",document.head.appendChild(t)}}async sendPrivateMessage(t,e){if(t&&t.trim()&&this.roomCode&&e)try{const s=this.db.collection("rooms").doc(this.roomCode).collection("messages");await s.add({sender:this.playerName||"Teacher",sender_uid:this.isTeacher?this.auth.currentUser?.uid:this.studentId,recipient_uid:e,content:t,timestamp:firebase.firestore.FieldValue.serverTimestamp(),is_teacher:this.isTeacher,is_private:!0})}catch(t){throw console.error("üî• Error sending private message:",t),t}}async testAIService(){if(!this.functions)return{available:!1,error:"Firebase Functions not initialized",code:"functions/not-initialized"};let t=this.auth.currentUser;if(!t)try{t=(await this.auth.signInAnonymously()).user}catch(t){return{available:!1,error:"Authentication failed",code:"auth-failed"}}if(!t||!t.uid)return{available:!1,error:"User not authenticated",code:"auth-missing"};try{const t=this.functions.httpsCallable("askChatGPT");return{available:!0,result:(await t({prompt:"Hello"})).data.result,code:"success"}}catch(t){return{available:!1,error:t.message,code:t.code||"unknown"}}}async startPoll(t){if(!this.isTeacher)return;console.log("üìä Starting poll",t);const e={id:Date.now()+"_"+Math.random().toString(36).substr(2,9),type:t.type,question:t.question||"",options:t.options,isActive:!0,createdAt:firebase.firestore.FieldValue.serverTimestamp(),responses:{}};await this.db.collection("rooms").doc(this.roomCode).update({"settings.currentPoll":e}),console.log("‚úÖ Poll started successfully")}async stopPoll(){this.isTeacher&&(console.log("üìä Stopping poll"),await this.db.collection("rooms").doc(this.roomCode).update({"settings.currentPoll.isActive":!1}),console.log("‚úÖ Poll stopped successfully"))}async submitPollAnswer(t){if(this.functions)try{const e=this.functions.httpsCallable("submitPollAnswer");await e({roomCode:this.roomCode,studentId:this.studentId,playerName:this.playerName,answer:t}),console.log("‚úÖ Poll answer successfully sent via Cloud Function.")}catch(t){console.error("üî• Error calling submitPollAnswer cloud function:",t)}else console.error("Firebase Functions is not initialized.")}listenForPollUpdates(t){this.roomListener_Polls=this.db.collection("rooms").doc(this.roomCode).onSnapshot(e=>{const s=e.data()?.settings?.currentPoll;this.lastKnownPollData=s,console.log("üìä Poll update received",s),"function"==typeof t&&t(s)})}getCurrentPollData(){return this.lastKnownPollData}getStudentId(){return this.studentId}async saveQuestionToHistory(t){if(!this.isTeacher||!t)return;const e=this.db.collection("rooms").doc(this.roomCode).collection("questionHistory").doc(t.id);await e.set({...t,closedAt:firebase.firestore.FieldValue.serverTimestamp()})}createPollInterface(){if(this.isTeacher||document.getElementById("classroom-poll-btn"))return;this.pollButton=document.createElement("button"),this.pollButton.id="classroom-poll-btn",this.pollButton.innerHTML='üìä<div id="poll-badge" style="position:absolute; top:-2px; right:-2px; width:12px; height:12px; border-radius:50%; background:red; display:none; border: 2px solid white;"></div>',this.pollButton.style.cssText="position: fixed; bottom: 20px; right: 160px; width: 60px; height: 60px; border-radius: 50%; background: #607d8b; color: white; border: none; font-size: 24px; cursor: pointer; box-shadow: 0 4px 12px rgba(0,0,0,0.3); z-index: 10000; display: block;",this.pollButton.onclick=()=>{if(this.pollContainer&&"true"===this.pollContainer.dataset.active){const t="none"!==this.pollContainer.style.display;this.pollContainer.style.display=t?"none":"block"}},this.makeDraggable(this.pollButton),document.body.appendChild(this.pollButton),this.pollContainer=document.createElement("div"),this.pollContainer.id="classroom-poll-container",this.pollContainer.dataset.active="false",this.pollContainer.style.cssText="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 450px; min-height: 200px; background: white; border-radius: 15px; box-shadow: 0 8px 40px rgba(0,0,0,0.25); z-index: 10001; display: none; overflow: hidden;";const t=document.createElement("div");t.style.cssText="background: #ff9800; color: white; padding: 15px; display: flex; justify-content: space-between; align-items: center; font-weight: bold; cursor: grab;",t.innerHTML='<span>üìä Poll / Question</span><button id="poll-minimize-btn" style="background: none; border: none; color: white; font-size: 18px; cursor: pointer; padding: 5px;">‚àí</button>',this.makeDraggable(this.pollContainer,t),t.querySelector("#poll-minimize-btn").onclick=t=>{t.stopPropagation(),this.pollContainer.style.display="none"};const e=document.createElement("div");e.id="classroom-poll-content-area",e.style.cssText="padding: 20px;",this.pollContainer.appendChild(t),this.pollContainer.appendChild(e),document.body.appendChild(this.pollContainer)}}